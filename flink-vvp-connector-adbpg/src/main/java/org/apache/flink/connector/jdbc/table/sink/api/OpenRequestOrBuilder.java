// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gpss.proto

package org.apache.flink.connector.jdbc.table.sink.api;

public interface OpenRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.OpenRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Session ID returned by Connect
   * </pre>
   *
   * <code>.api.Session Session = 1;</code>
   * @return Whether the session field is set.
   */
  boolean hasSession();
  /**
   * <pre>
   * Session ID returned by Connect
   * </pre>
   *
   * <code>.api.Session Session = 1;</code>
   * @return The session.
   */
  Session getSession();
  /**
   * <pre>
   * Session ID returned by Connect
   * </pre>
   *
   * <code>.api.Session Session = 1;</code>
   */
  SessionOrBuilder getSessionOrBuilder();

  /**
   * <pre>
   * Name of the Greenplum Database schema
   * </pre>
   *
   * <code>string SchemaName = 2;</code>
   * @return The schemaName.
   */
  String getSchemaName();
  /**
   * <pre>
   * Name of the Greenplum Database schema
   * </pre>
   *
   * <code>string SchemaName = 2;</code>
   * @return The bytes for schemaName.
   */
  com.google.protobuf.ByteString
      getSchemaNameBytes();

  /**
   * <pre>
   * Name of the Greenplum Database table
   * </pre>
   *
   * <code>string TableName = 3;</code>
   * @return The tableName.
   */
  String getTableName();
  /**
   * <pre>
   * Name of the Greenplum Database table
   * </pre>
   *
   * <code>string TableName = 3;</code>
   * @return The bytes for tableName.
   */
  com.google.protobuf.ByteString
      getTableNameBytes();

  /**
   * <pre>
   * SQL to execute before gpss loads the data
   * </pre>
   *
   * <code>string PreSQL = 4;</code>
   * @return The preSQL.
   */
  String getPreSQL();
  /**
   * <pre>
   * SQL to execute before gpss loads the data
   * </pre>
   *
   * <code>string PreSQL = 4;</code>
   * @return The bytes for preSQL.
   */
  com.google.protobuf.ByteString
      getPreSQLBytes();

  /**
   * <pre>
   * SQL to execute after gpss loads the data
   * </pre>
   *
   * <code>string PostSQL = 5;</code>
   * @return The postSQL.
   */
  String getPostSQL();
  /**
   * <pre>
   * SQL to execute after gpss loads the data
   * </pre>
   *
   * <code>string PostSQL = 5;</code>
   * @return The bytes for postSQL.
   */
  com.google.protobuf.ByteString
      getPostSQLBytes();

  /**
   * <pre>
   * Time to wait before aborting the operation (seconds); not supported
   * </pre>
   *
   * <code>int32 Timeout = 6;</code>
   * @return The timeout.
   */
  int getTimeout();

  /**
   * <pre>
   * Encoding of text data; not supported
   * </pre>
   *
   * <code>string Encoding = 7;</code>
   * @return The encoding.
   */
  String getEncoding();
  /**
   * <pre>
   * Encoding of text data; not supported
   * </pre>
   *
   * <code>string Encoding = 7;</code>
   * @return The bytes for encoding.
   */
  com.google.protobuf.ByteString
      getEncodingBytes();

  /**
   * <pre>
   * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
   * </pre>
   *
   * <code>string StagingSchema = 8;</code>
   * @return The stagingSchema.
   */
  String getStagingSchema();
  /**
   * <pre>
   * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
   * </pre>
   *
   * <code>string StagingSchema = 8;</code>
   * @return The bytes for stagingSchema.
   */
  com.google.protobuf.ByteString
      getStagingSchemaBytes();

  /**
   * <code>.api.InsertOption InsertOption = 100;</code>
   * @return Whether the insertOption field is set.
   */
  boolean hasInsertOption();
  /**
   * <code>.api.InsertOption InsertOption = 100;</code>
   * @return The insertOption.
   */
  InsertOption getInsertOption();
  /**
   * <code>.api.InsertOption InsertOption = 100;</code>
   */
  InsertOptionOrBuilder getInsertOptionOrBuilder();

  /**
   * <code>.api.UpdateOption UpdateOption = 101;</code>
   * @return Whether the updateOption field is set.
   */
  boolean hasUpdateOption();
  /**
   * <code>.api.UpdateOption UpdateOption = 101;</code>
   * @return The updateOption.
   */
  UpdateOption getUpdateOption();
  /**
   * <code>.api.UpdateOption UpdateOption = 101;</code>
   */
  UpdateOptionOrBuilder getUpdateOptionOrBuilder();

  /**
   * <code>.api.MergeOption MergeOption = 102;</code>
   * @return Whether the mergeOption field is set.
   */
  boolean hasMergeOption();
  /**
   * <code>.api.MergeOption MergeOption = 102;</code>
   * @return The mergeOption.
   */
  MergeOption getMergeOption();
  /**
   * <code>.api.MergeOption MergeOption = 102;</code>
   */
  MergeOptionOrBuilder getMergeOptionOrBuilder();

  public OpenRequest.OptionCase getOptionCase();
}
