// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adbpgss.proto

package org.apache.flink.connector.jdbc.table.sink.api;

/**
 * <pre>
 * Required parameters of the Merge operation
 * Merge operation creates a session-level temp table in StagingSchema
 * </pre>
 *
 * Protobuf type {@code api.MergeOption}
 */
public final class MergeOption extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.MergeOption)
    MergeOptionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MergeOption.newBuilder() to construct.
  private MergeOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MergeOption() {
    insertColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    matchColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    updateColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    condition_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MergeOption();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.flink.connector.jdbc.table.sink.api.Adbpgss.internal_static_api_MergeOption_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.flink.connector.jdbc.table.sink.api.Adbpgss.internal_static_api_MergeOption_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.flink.connector.jdbc.table.sink.api.MergeOption.class, org.apache.flink.connector.jdbc.table.sink.api.MergeOption.Builder.class);
  }

  public static final int INSERTCOLUMNS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList insertColumns_;
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @return A list containing the insertColumns.
   */
  public com.google.protobuf.ProtocolStringList
      getInsertColumnsList() {
    return insertColumns_;
  }
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @return The count of insertColumns.
   */
  public int getInsertColumnsCount() {
    return insertColumns_.size();
  }
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @param index The index of the element to return.
   * @return The insertColumns at the given index.
   */
  public java.lang.String getInsertColumns(int index) {
    return insertColumns_.get(index);
  }
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @param index The index of the value to return.
   * @return The bytes of the insertColumns at the given index.
   */
  public com.google.protobuf.ByteString
      getInsertColumnsBytes(int index) {
    return insertColumns_.getByteString(index);
  }

  public static final int MATCHCOLUMNS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList matchColumns_;
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @return A list containing the matchColumns.
   */
  public com.google.protobuf.ProtocolStringList
      getMatchColumnsList() {
    return matchColumns_;
  }
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @return The count of matchColumns.
   */
  public int getMatchColumnsCount() {
    return matchColumns_.size();
  }
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @param index The index of the element to return.
   * @return The matchColumns at the given index.
   */
  public java.lang.String getMatchColumns(int index) {
    return matchColumns_.get(index);
  }
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the matchColumns at the given index.
   */
  public com.google.protobuf.ByteString
      getMatchColumnsBytes(int index) {
    return matchColumns_.getByteString(index);
  }

  public static final int UPDATECOLUMNS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList updateColumns_;
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @return A list containing the updateColumns.
   */
  public com.google.protobuf.ProtocolStringList
      getUpdateColumnsList() {
    return updateColumns_;
  }
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @return The count of updateColumns.
   */
  public int getUpdateColumnsCount() {
    return updateColumns_.size();
  }
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @param index The index of the element to return.
   * @return The updateColumns at the given index.
   */
  public java.lang.String getUpdateColumns(int index) {
    return updateColumns_.get(index);
  }
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the updateColumns at the given index.
   */
  public com.google.protobuf.ByteString
      getUpdateColumnsBytes(int index) {
    return updateColumns_.getByteString(index);
  }

  public static final int CONDITION_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object condition_ = "";
  /**
   * <code>string Condition = 4;</code>
   * @return The condition.
   */
  @java.lang.Override
  public java.lang.String getCondition() {
    java.lang.Object ref = condition_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      condition_ = s;
      return s;
    }
  }
  /**
   * <code>string Condition = 4;</code>
   * @return The bytes for condition.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConditionBytes() {
    java.lang.Object ref = condition_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      condition_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ERRORLIMITCOUNT_FIELD_NUMBER = 5;
  private long errorLimitCount_ = 0L;
  /**
   * <code>int64 ErrorLimitCount = 5;</code>
   * @return The errorLimitCount.
   */
  @java.lang.Override
  public long getErrorLimitCount() {
    return errorLimitCount_;
  }

  public static final int ERRORLIMITPERCENTAGE_FIELD_NUMBER = 6;
  private int errorLimitPercentage_ = 0;
  /**
   * <code>int32 ErrorLimitPercentage = 6;</code>
   * @return The errorLimitPercentage.
   */
  @java.lang.Override
  public int getErrorLimitPercentage() {
    return errorLimitPercentage_;
  }

  public static final int SKIPCONFLICT_FIELD_NUMBER = 7;
  private boolean skipConflict_ = false;
  /**
   * <pre>
   * Skip merge the conflict rows
   * </pre>
   *
   * <code>bool SkipConflict = 7;</code>
   * @return The skipConflict.
   */
  @java.lang.Override
  public boolean getSkipConflict() {
    return skipConflict_;
  }

  public static final int ENABLEPRIMARYKEYONTEMPTABLE_FIELD_NUMBER = 8;
  private boolean enablePrimaryKeyOnTempTable_ = false;
  /**
   * <pre>
   * Create primary key on temp table or not, which is used to speedup update performance
   * </pre>
   *
   * <code>bool EnablePrimaryKeyOnTempTable = 8;</code>
   * @return The enablePrimaryKeyOnTempTable.
   */
  @java.lang.Override
  public boolean getEnablePrimaryKeyOnTempTable() {
    return enablePrimaryKeyOnTempTable_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < insertColumns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, insertColumns_.getRaw(i));
    }
    for (int i = 0; i < matchColumns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, matchColumns_.getRaw(i));
    }
    for (int i = 0; i < updateColumns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, updateColumns_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(condition_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, condition_);
    }
    if (errorLimitCount_ != 0L) {
      output.writeInt64(5, errorLimitCount_);
    }
    if (errorLimitPercentage_ != 0) {
      output.writeInt32(6, errorLimitPercentage_);
    }
    if (skipConflict_ != false) {
      output.writeBool(7, skipConflict_);
    }
    if (enablePrimaryKeyOnTempTable_ != false) {
      output.writeBool(8, enablePrimaryKeyOnTempTable_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < insertColumns_.size(); i++) {
        dataSize += computeStringSizeNoTag(insertColumns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getInsertColumnsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < matchColumns_.size(); i++) {
        dataSize += computeStringSizeNoTag(matchColumns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getMatchColumnsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < updateColumns_.size(); i++) {
        dataSize += computeStringSizeNoTag(updateColumns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getUpdateColumnsList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(condition_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, condition_);
    }
    if (errorLimitCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, errorLimitCount_);
    }
    if (errorLimitPercentage_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, errorLimitPercentage_);
    }
    if (skipConflict_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, skipConflict_);
    }
    if (enablePrimaryKeyOnTempTable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, enablePrimaryKeyOnTempTable_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.flink.connector.jdbc.table.sink.api.MergeOption)) {
      return super.equals(obj);
    }
    org.apache.flink.connector.jdbc.table.sink.api.MergeOption other = (org.apache.flink.connector.jdbc.table.sink.api.MergeOption) obj;

    if (!getInsertColumnsList()
        .equals(other.getInsertColumnsList())) return false;
    if (!getMatchColumnsList()
        .equals(other.getMatchColumnsList())) return false;
    if (!getUpdateColumnsList()
        .equals(other.getUpdateColumnsList())) return false;
    if (!getCondition()
        .equals(other.getCondition())) return false;
    if (getErrorLimitCount()
        != other.getErrorLimitCount()) return false;
    if (getErrorLimitPercentage()
        != other.getErrorLimitPercentage()) return false;
    if (getSkipConflict()
        != other.getSkipConflict()) return false;
    if (getEnablePrimaryKeyOnTempTable()
        != other.getEnablePrimaryKeyOnTempTable()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getInsertColumnsCount() > 0) {
      hash = (37 * hash) + INSERTCOLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getInsertColumnsList().hashCode();
    }
    if (getMatchColumnsCount() > 0) {
      hash = (37 * hash) + MATCHCOLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getMatchColumnsList().hashCode();
    }
    if (getUpdateColumnsCount() > 0) {
      hash = (37 * hash) + UPDATECOLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateColumnsList().hashCode();
    }
    hash = (37 * hash) + CONDITION_FIELD_NUMBER;
    hash = (53 * hash) + getCondition().hashCode();
    hash = (37 * hash) + ERRORLIMITCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getErrorLimitCount());
    hash = (37 * hash) + ERRORLIMITPERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + getErrorLimitPercentage();
    hash = (37 * hash) + SKIPCONFLICT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkipConflict());
    hash = (37 * hash) + ENABLEPRIMARYKEYONTEMPTABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnablePrimaryKeyOnTempTable());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.flink.connector.jdbc.table.sink.api.MergeOption prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Required parameters of the Merge operation
   * Merge operation creates a session-level temp table in StagingSchema
   * </pre>
   *
   * Protobuf type {@code api.MergeOption}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.MergeOption)
      org.apache.flink.connector.jdbc.table.sink.api.MergeOptionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.flink.connector.jdbc.table.sink.api.Adbpgss.internal_static_api_MergeOption_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.flink.connector.jdbc.table.sink.api.Adbpgss.internal_static_api_MergeOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.flink.connector.jdbc.table.sink.api.MergeOption.class, org.apache.flink.connector.jdbc.table.sink.api.MergeOption.Builder.class);
    }

    // Construct using org.apache.flink.connector.jdbc.table.sink.api.MergeOption.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      insertColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      matchColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      updateColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      condition_ = "";
      errorLimitCount_ = 0L;
      errorLimitPercentage_ = 0;
      skipConflict_ = false;
      enablePrimaryKeyOnTempTable_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.flink.connector.jdbc.table.sink.api.Adbpgss.internal_static_api_MergeOption_descriptor;
    }

    @java.lang.Override
    public org.apache.flink.connector.jdbc.table.sink.api.MergeOption getDefaultInstanceForType() {
      return org.apache.flink.connector.jdbc.table.sink.api.MergeOption.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.flink.connector.jdbc.table.sink.api.MergeOption build() {
      org.apache.flink.connector.jdbc.table.sink.api.MergeOption result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.flink.connector.jdbc.table.sink.api.MergeOption buildPartial() {
      org.apache.flink.connector.jdbc.table.sink.api.MergeOption result = new org.apache.flink.connector.jdbc.table.sink.api.MergeOption(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.apache.flink.connector.jdbc.table.sink.api.MergeOption result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        insertColumns_ = insertColumns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.insertColumns_ = insertColumns_;
      if (((bitField0_ & 0x00000002) != 0)) {
        matchColumns_ = matchColumns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.matchColumns_ = matchColumns_;
      if (((bitField0_ & 0x00000004) != 0)) {
        updateColumns_ = updateColumns_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.updateColumns_ = updateColumns_;
    }

    private void buildPartial0(org.apache.flink.connector.jdbc.table.sink.api.MergeOption result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.condition_ = condition_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.errorLimitCount_ = errorLimitCount_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.errorLimitPercentage_ = errorLimitPercentage_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.skipConflict_ = skipConflict_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.enablePrimaryKeyOnTempTable_ = enablePrimaryKeyOnTempTable_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.flink.connector.jdbc.table.sink.api.MergeOption) {
        return mergeFrom((org.apache.flink.connector.jdbc.table.sink.api.MergeOption)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.flink.connector.jdbc.table.sink.api.MergeOption other) {
      if (other == org.apache.flink.connector.jdbc.table.sink.api.MergeOption.getDefaultInstance()) return this;
      if (!other.insertColumns_.isEmpty()) {
        if (insertColumns_.isEmpty()) {
          insertColumns_ = other.insertColumns_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureInsertColumnsIsMutable();
          insertColumns_.addAll(other.insertColumns_);
        }
        onChanged();
      }
      if (!other.matchColumns_.isEmpty()) {
        if (matchColumns_.isEmpty()) {
          matchColumns_ = other.matchColumns_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureMatchColumnsIsMutable();
          matchColumns_.addAll(other.matchColumns_);
        }
        onChanged();
      }
      if (!other.updateColumns_.isEmpty()) {
        if (updateColumns_.isEmpty()) {
          updateColumns_ = other.updateColumns_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureUpdateColumnsIsMutable();
          updateColumns_.addAll(other.updateColumns_);
        }
        onChanged();
      }
      if (!other.getCondition().isEmpty()) {
        condition_ = other.condition_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getErrorLimitCount() != 0L) {
        setErrorLimitCount(other.getErrorLimitCount());
      }
      if (other.getErrorLimitPercentage() != 0) {
        setErrorLimitPercentage(other.getErrorLimitPercentage());
      }
      if (other.getSkipConflict() != false) {
        setSkipConflict(other.getSkipConflict());
      }
      if (other.getEnablePrimaryKeyOnTempTable() != false) {
        setEnablePrimaryKeyOnTempTable(other.getEnablePrimaryKeyOnTempTable());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureInsertColumnsIsMutable();
              insertColumns_.add(s);
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureMatchColumnsIsMutable();
              matchColumns_.add(s);
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureUpdateColumnsIsMutable();
              updateColumns_.add(s);
              break;
            } // case 26
            case 34: {
              condition_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              errorLimitCount_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              errorLimitPercentage_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              skipConflict_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              enablePrimaryKeyOnTempTable_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList insertColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureInsertColumnsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        insertColumns_ = new com.google.protobuf.LazyStringArrayList(insertColumns_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @return A list containing the insertColumns.
     */
    public com.google.protobuf.ProtocolStringList
        getInsertColumnsList() {
      return insertColumns_.getUnmodifiableView();
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @return The count of insertColumns.
     */
    public int getInsertColumnsCount() {
      return insertColumns_.size();
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @param index The index of the element to return.
     * @return The insertColumns at the given index.
     */
    public java.lang.String getInsertColumns(int index) {
      return insertColumns_.get(index);
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the insertColumns at the given index.
     */
    public com.google.protobuf.ByteString
        getInsertColumnsBytes(int index) {
      return insertColumns_.getByteString(index);
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @param index The index to set the value at.
     * @param value The insertColumns to set.
     * @return This builder for chaining.
     */
    public Builder setInsertColumns(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureInsertColumnsIsMutable();
      insertColumns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @param value The insertColumns to add.
     * @return This builder for chaining.
     */
    public Builder addInsertColumns(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureInsertColumnsIsMutable();
      insertColumns_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @param values The insertColumns to add.
     * @return This builder for chaining.
     */
    public Builder addAllInsertColumns(
        java.lang.Iterable<java.lang.String> values) {
      ensureInsertColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, insertColumns_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearInsertColumns() {
      insertColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string InsertColumns = 1;</code>
     * @param value The bytes of the insertColumns to add.
     * @return This builder for chaining.
     */
    public Builder addInsertColumnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureInsertColumnsIsMutable();
      insertColumns_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList matchColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureMatchColumnsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        matchColumns_ = new com.google.protobuf.LazyStringArrayList(matchColumns_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @return A list containing the matchColumns.
     */
    public com.google.protobuf.ProtocolStringList
        getMatchColumnsList() {
      return matchColumns_.getUnmodifiableView();
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @return The count of matchColumns.
     */
    public int getMatchColumnsCount() {
      return matchColumns_.size();
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @param index The index of the element to return.
     * @return The matchColumns at the given index.
     */
    public java.lang.String getMatchColumns(int index) {
      return matchColumns_.get(index);
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the matchColumns at the given index.
     */
    public com.google.protobuf.ByteString
        getMatchColumnsBytes(int index) {
      return matchColumns_.getByteString(index);
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @param index The index to set the value at.
     * @param value The matchColumns to set.
     * @return This builder for chaining.
     */
    public Builder setMatchColumns(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureMatchColumnsIsMutable();
      matchColumns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @param value The matchColumns to add.
     * @return This builder for chaining.
     */
    public Builder addMatchColumns(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureMatchColumnsIsMutable();
      matchColumns_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @param values The matchColumns to add.
     * @return This builder for chaining.
     */
    public Builder addAllMatchColumns(
        java.lang.Iterable<java.lang.String> values) {
      ensureMatchColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, matchColumns_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchColumns() {
      matchColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string MatchColumns = 2;</code>
     * @param value The bytes of the matchColumns to add.
     * @return This builder for chaining.
     */
    public Builder addMatchColumnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureMatchColumnsIsMutable();
      matchColumns_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList updateColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureUpdateColumnsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        updateColumns_ = new com.google.protobuf.LazyStringArrayList(updateColumns_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @return A list containing the updateColumns.
     */
    public com.google.protobuf.ProtocolStringList
        getUpdateColumnsList() {
      return updateColumns_.getUnmodifiableView();
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @return The count of updateColumns.
     */
    public int getUpdateColumnsCount() {
      return updateColumns_.size();
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @param index The index of the element to return.
     * @return The updateColumns at the given index.
     */
    public java.lang.String getUpdateColumns(int index) {
      return updateColumns_.get(index);
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the updateColumns at the given index.
     */
    public com.google.protobuf.ByteString
        getUpdateColumnsBytes(int index) {
      return updateColumns_.getByteString(index);
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @param index The index to set the value at.
     * @param value The updateColumns to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateColumns(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureUpdateColumnsIsMutable();
      updateColumns_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @param value The updateColumns to add.
     * @return This builder for chaining.
     */
    public Builder addUpdateColumns(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureUpdateColumnsIsMutable();
      updateColumns_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @param values The updateColumns to add.
     * @return This builder for chaining.
     */
    public Builder addAllUpdateColumns(
        java.lang.Iterable<java.lang.String> values) {
      ensureUpdateColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, updateColumns_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdateColumns() {
      updateColumns_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string UpdateColumns = 3;</code>
     * @param value The bytes of the updateColumns to add.
     * @return This builder for chaining.
     */
    public Builder addUpdateColumnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureUpdateColumnsIsMutable();
      updateColumns_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object condition_ = "";
    /**
     * <code>string Condition = 4;</code>
     * @return The condition.
     */
    public java.lang.String getCondition() {
      java.lang.Object ref = condition_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        condition_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string Condition = 4;</code>
     * @return The bytes for condition.
     */
    public com.google.protobuf.ByteString
        getConditionBytes() {
      java.lang.Object ref = condition_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        condition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string Condition = 4;</code>
     * @param value The condition to set.
     * @return This builder for chaining.
     */
    public Builder setCondition(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      condition_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string Condition = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCondition() {
      condition_ = getDefaultInstance().getCondition();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string Condition = 4;</code>
     * @param value The bytes for condition to set.
     * @return This builder for chaining.
     */
    public Builder setConditionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      condition_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private long errorLimitCount_ ;
    /**
     * <code>int64 ErrorLimitCount = 5;</code>
     * @return The errorLimitCount.
     */
    @java.lang.Override
    public long getErrorLimitCount() {
      return errorLimitCount_;
    }
    /**
     * <code>int64 ErrorLimitCount = 5;</code>
     * @param value The errorLimitCount to set.
     * @return This builder for chaining.
     */
    public Builder setErrorLimitCount(long value) {
      
      errorLimitCount_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int64 ErrorLimitCount = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearErrorLimitCount() {
      bitField0_ = (bitField0_ & ~0x00000010);
      errorLimitCount_ = 0L;
      onChanged();
      return this;
    }

    private int errorLimitPercentage_ ;
    /**
     * <code>int32 ErrorLimitPercentage = 6;</code>
     * @return The errorLimitPercentage.
     */
    @java.lang.Override
    public int getErrorLimitPercentage() {
      return errorLimitPercentage_;
    }
    /**
     * <code>int32 ErrorLimitPercentage = 6;</code>
     * @param value The errorLimitPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setErrorLimitPercentage(int value) {
      
      errorLimitPercentage_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int32 ErrorLimitPercentage = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearErrorLimitPercentage() {
      bitField0_ = (bitField0_ & ~0x00000020);
      errorLimitPercentage_ = 0;
      onChanged();
      return this;
    }

    private boolean skipConflict_ ;
    /**
     * <pre>
     * Skip merge the conflict rows
     * </pre>
     *
     * <code>bool SkipConflict = 7;</code>
     * @return The skipConflict.
     */
    @java.lang.Override
    public boolean getSkipConflict() {
      return skipConflict_;
    }
    /**
     * <pre>
     * Skip merge the conflict rows
     * </pre>
     *
     * <code>bool SkipConflict = 7;</code>
     * @param value The skipConflict to set.
     * @return This builder for chaining.
     */
    public Builder setSkipConflict(boolean value) {
      
      skipConflict_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Skip merge the conflict rows
     * </pre>
     *
     * <code>bool SkipConflict = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipConflict() {
      bitField0_ = (bitField0_ & ~0x00000040);
      skipConflict_ = false;
      onChanged();
      return this;
    }

    private boolean enablePrimaryKeyOnTempTable_ ;
    /**
     * <pre>
     * Create primary key on temp table or not, which is used to speedup update performance
     * </pre>
     *
     * <code>bool EnablePrimaryKeyOnTempTable = 8;</code>
     * @return The enablePrimaryKeyOnTempTable.
     */
    @java.lang.Override
    public boolean getEnablePrimaryKeyOnTempTable() {
      return enablePrimaryKeyOnTempTable_;
    }
    /**
     * <pre>
     * Create primary key on temp table or not, which is used to speedup update performance
     * </pre>
     *
     * <code>bool EnablePrimaryKeyOnTempTable = 8;</code>
     * @param value The enablePrimaryKeyOnTempTable to set.
     * @return This builder for chaining.
     */
    public Builder setEnablePrimaryKeyOnTempTable(boolean value) {
      
      enablePrimaryKeyOnTempTable_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Create primary key on temp table or not, which is used to speedup update performance
     * </pre>
     *
     * <code>bool EnablePrimaryKeyOnTempTable = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnablePrimaryKeyOnTempTable() {
      bitField0_ = (bitField0_ & ~0x00000080);
      enablePrimaryKeyOnTempTable_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.MergeOption)
  }

  // @@protoc_insertion_point(class_scope:api.MergeOption)
  private static final org.apache.flink.connector.jdbc.table.sink.api.MergeOption DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.flink.connector.jdbc.table.sink.api.MergeOption();
  }

  public static org.apache.flink.connector.jdbc.table.sink.api.MergeOption getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MergeOption>
      PARSER = new com.google.protobuf.AbstractParser<MergeOption>() {
    @java.lang.Override
    public MergeOption parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MergeOption> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MergeOption> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.flink.connector.jdbc.table.sink.api.MergeOption getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

