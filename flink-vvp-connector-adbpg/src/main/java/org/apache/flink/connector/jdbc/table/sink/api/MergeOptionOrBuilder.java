// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adbpgss.proto

package org.apache.flink.connector.jdbc.table.sink.api;

public interface MergeOptionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.MergeOption)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @return A list containing the insertColumns.
   */
  java.util.List<java.lang.String>
      getInsertColumnsList();
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @return The count of insertColumns.
   */
  int getInsertColumnsCount();
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @param index The index of the element to return.
   * @return The insertColumns at the given index.
   */
  java.lang.String getInsertColumns(int index);
  /**
   * <code>repeated string InsertColumns = 1;</code>
   * @param index The index of the value to return.
   * @return The bytes of the insertColumns at the given index.
   */
  com.google.protobuf.ByteString
      getInsertColumnsBytes(int index);

  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @return A list containing the matchColumns.
   */
  java.util.List<java.lang.String>
      getMatchColumnsList();
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @return The count of matchColumns.
   */
  int getMatchColumnsCount();
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @param index The index of the element to return.
   * @return The matchColumns at the given index.
   */
  java.lang.String getMatchColumns(int index);
  /**
   * <code>repeated string MatchColumns = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the matchColumns at the given index.
   */
  com.google.protobuf.ByteString
      getMatchColumnsBytes(int index);

  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @return A list containing the updateColumns.
   */
  java.util.List<java.lang.String>
      getUpdateColumnsList();
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @return The count of updateColumns.
   */
  int getUpdateColumnsCount();
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @param index The index of the element to return.
   * @return The updateColumns at the given index.
   */
  java.lang.String getUpdateColumns(int index);
  /**
   * <code>repeated string UpdateColumns = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the updateColumns at the given index.
   */
  com.google.protobuf.ByteString
      getUpdateColumnsBytes(int index);

  /**
   * <code>string Condition = 4;</code>
   * @return The condition.
   */
  java.lang.String getCondition();
  /**
   * <code>string Condition = 4;</code>
   * @return The bytes for condition.
   */
  com.google.protobuf.ByteString
      getConditionBytes();

  /**
   * <code>int64 ErrorLimitCount = 5;</code>
   * @return The errorLimitCount.
   */
  long getErrorLimitCount();

  /**
   * <code>int32 ErrorLimitPercentage = 6;</code>
   * @return The errorLimitPercentage.
   */
  int getErrorLimitPercentage();

  /**
   * <pre>
   * Skip merge the conflict rows
   * </pre>
   *
   * <code>bool SkipConflict = 7;</code>
   * @return The skipConflict.
   */
  boolean getSkipConflict();

  /**
   * <pre>
   * Create primary key on temp table or not, which is used to speedup update performance
   * </pre>
   *
   * <code>bool EnablePrimaryKeyOnTempTable = 8;</code>
   * @return The enablePrimaryKeyOnTempTable.
   */
  boolean getEnablePrimaryKeyOnTempTable();
}
