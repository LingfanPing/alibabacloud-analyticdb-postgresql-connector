// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gpss.proto

package org.apache.flink.connector.jdbc.table.sink.api;

/**
 * <pre>
 * Open service Request message
 * </pre>
 *
 * Protobuf type {@code api.OpenRequest}
 */
public  final class OpenRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.OpenRequest)
    OpenRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OpenRequest.newBuilder() to construct.
  private OpenRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OpenRequest() {
    schemaName_ = "";
    tableName_ = "";
    preSQL_ = "";
    postSQL_ = "";
    encoding_ = "";
    stagingSchema_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new OpenRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OpenRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            Session.Builder subBuilder = null;
            if (session_ != null) {
              subBuilder = session_.toBuilder();
            }
            session_ = input.readMessage(Session.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(session_);
              session_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            schemaName_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            tableName_ = s;
            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            preSQL_ = s;
            break;
          }
          case 42: {
            String s = input.readStringRequireUtf8();

            postSQL_ = s;
            break;
          }
          case 48: {

            timeout_ = input.readInt32();
            break;
          }
          case 58: {
            String s = input.readStringRequireUtf8();

            encoding_ = s;
            break;
          }
          case 66: {
            String s = input.readStringRequireUtf8();

            stagingSchema_ = s;
            break;
          }
          case 802: {
            InsertOption.Builder subBuilder = null;
            if (optionCase_ == 100) {
              subBuilder = ((InsertOption) option_).toBuilder();
            }
            option_ =
                input.readMessage(InsertOption.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((InsertOption) option_);
              option_ = subBuilder.buildPartial();
            }
            optionCase_ = 100;
            break;
          }
          case 810: {
            UpdateOption.Builder subBuilder = null;
            if (optionCase_ == 101) {
              subBuilder = ((UpdateOption) option_).toBuilder();
            }
            option_ =
                input.readMessage(UpdateOption.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((UpdateOption) option_);
              option_ = subBuilder.buildPartial();
            }
            optionCase_ = 101;
            break;
          }
          case 818: {
            MergeOption.Builder subBuilder = null;
            if (optionCase_ == 102) {
              subBuilder = ((MergeOption) option_).toBuilder();
            }
            option_ =
                input.readMessage(MergeOption.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((MergeOption) option_);
              option_ = subBuilder.buildPartial();
            }
            optionCase_ = 102;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GpssOuterClass.internal_static_api_OpenRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GpssOuterClass.internal_static_api_OpenRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            OpenRequest.class, Builder.class);
  }

  private int optionCase_ = 0;
  private Object option_;
  public enum OptionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    INSERTOPTION(100),
    UPDATEOPTION(101),
    MERGEOPTION(102),
    OPTION_NOT_SET(0);
    private final int value;
    private OptionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OptionCase valueOf(int value) {
      return forNumber(value);
    }

    public static OptionCase forNumber(int value) {
      switch (value) {
        case 100: return INSERTOPTION;
        case 101: return UPDATEOPTION;
        case 102: return MERGEOPTION;
        case 0: return OPTION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OptionCase
  getOptionCase() {
    return OptionCase.forNumber(
        optionCase_);
  }

  public static final int SESSION_FIELD_NUMBER = 1;
  private Session session_;
  /**
   * <pre>
   * Session ID returned by Connect
   * </pre>
   *
   * <code>.api.Session Session = 1;</code>
   * @return Whether the session field is set.
   */
  public boolean hasSession() {
    return session_ != null;
  }
  /**
   * <pre>
   * Session ID returned by Connect
   * </pre>
   *
   * <code>.api.Session Session = 1;</code>
   * @return The session.
   */
  public Session getSession() {
    return session_ == null ? Session.getDefaultInstance() : session_;
  }
  /**
   * <pre>
   * Session ID returned by Connect
   * </pre>
   *
   * <code>.api.Session Session = 1;</code>
   */
  public SessionOrBuilder getSessionOrBuilder() {
    return getSession();
  }

  public static final int SCHEMANAME_FIELD_NUMBER = 2;
  private volatile Object schemaName_;
  /**
   * <pre>
   * Name of the Greenplum Database schema
   * </pre>
   *
   * <code>string SchemaName = 2;</code>
   * @return The schemaName.
   */
  public String getSchemaName() {
    Object ref = schemaName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      schemaName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the Greenplum Database schema
   * </pre>
   *
   * <code>string SchemaName = 2;</code>
   * @return The bytes for schemaName.
   */
  public com.google.protobuf.ByteString
      getSchemaNameBytes() {
    Object ref = schemaName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      schemaName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TABLENAME_FIELD_NUMBER = 3;
  private volatile Object tableName_;
  /**
   * <pre>
   * Name of the Greenplum Database table
   * </pre>
   *
   * <code>string TableName = 3;</code>
   * @return The tableName.
   */
  public String getTableName() {
    Object ref = tableName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      tableName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the Greenplum Database table
   * </pre>
   *
   * <code>string TableName = 3;</code>
   * @return The bytes for tableName.
   */
  public com.google.protobuf.ByteString
      getTableNameBytes() {
    Object ref = tableName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRESQL_FIELD_NUMBER = 4;
  private volatile Object preSQL_;
  /**
   * <pre>
   * SQL to execute before gpss loads the data
   * </pre>
   *
   * <code>string PreSQL = 4;</code>
   * @return The preSQL.
   */
  public String getPreSQL() {
    Object ref = preSQL_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      preSQL_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * SQL to execute before gpss loads the data
   * </pre>
   *
   * <code>string PreSQL = 4;</code>
   * @return The bytes for preSQL.
   */
  public com.google.protobuf.ByteString
      getPreSQLBytes() {
    Object ref = preSQL_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      preSQL_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POSTSQL_FIELD_NUMBER = 5;
  private volatile Object postSQL_;
  /**
   * <pre>
   * SQL to execute after gpss loads the data
   * </pre>
   *
   * <code>string PostSQL = 5;</code>
   * @return The postSQL.
   */
  public String getPostSQL() {
    Object ref = postSQL_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      postSQL_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * SQL to execute after gpss loads the data
   * </pre>
   *
   * <code>string PostSQL = 5;</code>
   * @return The bytes for postSQL.
   */
  public com.google.protobuf.ByteString
      getPostSQLBytes() {
    Object ref = postSQL_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      postSQL_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMEOUT_FIELD_NUMBER = 6;
  private int timeout_;
  /**
   * <pre>
   * Time to wait before aborting the operation (seconds); not supported
   * </pre>
   *
   * <code>int32 Timeout = 6;</code>
   * @return The timeout.
   */
  public int getTimeout() {
    return timeout_;
  }

  public static final int ENCODING_FIELD_NUMBER = 7;
  private volatile Object encoding_;
  /**
   * <pre>
   * Encoding of text data; not supported
   * </pre>
   *
   * <code>string Encoding = 7;</code>
   * @return The encoding.
   */
  public String getEncoding() {
    Object ref = encoding_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      encoding_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Encoding of text data; not supported
   * </pre>
   *
   * <code>string Encoding = 7;</code>
   * @return The bytes for encoding.
   */
  public com.google.protobuf.ByteString
      getEncodingBytes() {
    Object ref = encoding_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      encoding_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STAGINGSCHEMA_FIELD_NUMBER = 8;
  private volatile Object stagingSchema_;
  /**
   * <pre>
   * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
   * </pre>
   *
   * <code>string StagingSchema = 8;</code>
   * @return The stagingSchema.
   */
  public String getStagingSchema() {
    Object ref = stagingSchema_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      stagingSchema_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
   * </pre>
   *
   * <code>string StagingSchema = 8;</code>
   * @return The bytes for stagingSchema.
   */
  public com.google.protobuf.ByteString
      getStagingSchemaBytes() {
    Object ref = stagingSchema_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      stagingSchema_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSERTOPTION_FIELD_NUMBER = 100;
  /**
   * <code>.api.InsertOption InsertOption = 100;</code>
   * @return Whether the insertOption field is set.
   */
  public boolean hasInsertOption() {
    return optionCase_ == 100;
  }
  /**
   * <code>.api.InsertOption InsertOption = 100;</code>
   * @return The insertOption.
   */
  public InsertOption getInsertOption() {
    if (optionCase_ == 100) {
       return (InsertOption) option_;
    }
    return InsertOption.getDefaultInstance();
  }
  /**
   * <code>.api.InsertOption InsertOption = 100;</code>
   */
  public InsertOptionOrBuilder getInsertOptionOrBuilder() {
    if (optionCase_ == 100) {
       return (InsertOption) option_;
    }
    return InsertOption.getDefaultInstance();
  }

  public static final int UPDATEOPTION_FIELD_NUMBER = 101;
  /**
   * <code>.api.UpdateOption UpdateOption = 101;</code>
   * @return Whether the updateOption field is set.
   */
  public boolean hasUpdateOption() {
    return optionCase_ == 101;
  }
  /**
   * <code>.api.UpdateOption UpdateOption = 101;</code>
   * @return The updateOption.
   */
  public UpdateOption getUpdateOption() {
    if (optionCase_ == 101) {
       return (UpdateOption) option_;
    }
    return UpdateOption.getDefaultInstance();
  }
  /**
   * <code>.api.UpdateOption UpdateOption = 101;</code>
   */
  public UpdateOptionOrBuilder getUpdateOptionOrBuilder() {
    if (optionCase_ == 101) {
       return (UpdateOption) option_;
    }
    return UpdateOption.getDefaultInstance();
  }

  public static final int MERGEOPTION_FIELD_NUMBER = 102;
  /**
   * <code>.api.MergeOption MergeOption = 102;</code>
   * @return Whether the mergeOption field is set.
   */
  public boolean hasMergeOption() {
    return optionCase_ == 102;
  }
  /**
   * <code>.api.MergeOption MergeOption = 102;</code>
   * @return The mergeOption.
   */
  public MergeOption getMergeOption() {
    if (optionCase_ == 102) {
       return (MergeOption) option_;
    }
    return MergeOption.getDefaultInstance();
  }
  /**
   * <code>.api.MergeOption MergeOption = 102;</code>
   */
  public MergeOptionOrBuilder getMergeOptionOrBuilder() {
    if (optionCase_ == 102) {
       return (MergeOption) option_;
    }
    return MergeOption.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (session_ != null) {
      output.writeMessage(1, getSession());
    }
    if (!getSchemaNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, schemaName_);
    }
    if (!getTableNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tableName_);
    }
    if (!getPreSQLBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, preSQL_);
    }
    if (!getPostSQLBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, postSQL_);
    }
    if (timeout_ != 0) {
      output.writeInt32(6, timeout_);
    }
    if (!getEncodingBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, encoding_);
    }
    if (!getStagingSchemaBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, stagingSchema_);
    }
    if (optionCase_ == 100) {
      output.writeMessage(100, (InsertOption) option_);
    }
    if (optionCase_ == 101) {
      output.writeMessage(101, (UpdateOption) option_);
    }
    if (optionCase_ == 102) {
      output.writeMessage(102, (MergeOption) option_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (session_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSession());
    }
    if (!getSchemaNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, schemaName_);
    }
    if (!getTableNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tableName_);
    }
    if (!getPreSQLBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, preSQL_);
    }
    if (!getPostSQLBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, postSQL_);
    }
    if (timeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, timeout_);
    }
    if (!getEncodingBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, encoding_);
    }
    if (!getStagingSchemaBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, stagingSchema_);
    }
    if (optionCase_ == 100) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(100, (InsertOption) option_);
    }
    if (optionCase_ == 101) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(101, (UpdateOption) option_);
    }
    if (optionCase_ == 102) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(102, (MergeOption) option_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof OpenRequest)) {
      return super.equals(obj);
    }
    OpenRequest other = (OpenRequest) obj;

    if (hasSession() != other.hasSession()) return false;
    if (hasSession()) {
      if (!getSession()
          .equals(other.getSession())) return false;
    }
    if (!getSchemaName()
        .equals(other.getSchemaName())) return false;
    if (!getTableName()
        .equals(other.getTableName())) return false;
    if (!getPreSQL()
        .equals(other.getPreSQL())) return false;
    if (!getPostSQL()
        .equals(other.getPostSQL())) return false;
    if (getTimeout()
        != other.getTimeout()) return false;
    if (!getEncoding()
        .equals(other.getEncoding())) return false;
    if (!getStagingSchema()
        .equals(other.getStagingSchema())) return false;
    if (!getOptionCase().equals(other.getOptionCase())) return false;
    switch (optionCase_) {
      case 100:
        if (!getInsertOption()
            .equals(other.getInsertOption())) return false;
        break;
      case 101:
        if (!getUpdateOption()
            .equals(other.getUpdateOption())) return false;
        break;
      case 102:
        if (!getMergeOption()
            .equals(other.getMergeOption())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSession()) {
      hash = (37 * hash) + SESSION_FIELD_NUMBER;
      hash = (53 * hash) + getSession().hashCode();
    }
    hash = (37 * hash) + SCHEMANAME_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaName().hashCode();
    hash = (37 * hash) + TABLENAME_FIELD_NUMBER;
    hash = (53 * hash) + getTableName().hashCode();
    hash = (37 * hash) + PRESQL_FIELD_NUMBER;
    hash = (53 * hash) + getPreSQL().hashCode();
    hash = (37 * hash) + POSTSQL_FIELD_NUMBER;
    hash = (53 * hash) + getPostSQL().hashCode();
    hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTimeout();
    hash = (37 * hash) + ENCODING_FIELD_NUMBER;
    hash = (53 * hash) + getEncoding().hashCode();
    hash = (37 * hash) + STAGINGSCHEMA_FIELD_NUMBER;
    hash = (53 * hash) + getStagingSchema().hashCode();
    switch (optionCase_) {
      case 100:
        hash = (37 * hash) + INSERTOPTION_FIELD_NUMBER;
        hash = (53 * hash) + getInsertOption().hashCode();
        break;
      case 101:
        hash = (37 * hash) + UPDATEOPTION_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateOption().hashCode();
        break;
      case 102:
        hash = (37 * hash) + MERGEOPTION_FIELD_NUMBER;
        hash = (53 * hash) + getMergeOption().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static OpenRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static OpenRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static OpenRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static OpenRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static OpenRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static OpenRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static OpenRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static OpenRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static OpenRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static OpenRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static OpenRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static OpenRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(OpenRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Open service Request message
   * </pre>
   *
   * Protobuf type {@code api.OpenRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.OpenRequest)
      OpenRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GpssOuterClass.internal_static_api_OpenRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GpssOuterClass.internal_static_api_OpenRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OpenRequest.class, Builder.class);
    }

    // Construct using api.OpenRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (sessionBuilder_ == null) {
        session_ = null;
      } else {
        session_ = null;
        sessionBuilder_ = null;
      }
      schemaName_ = "";

      tableName_ = "";

      preSQL_ = "";

      postSQL_ = "";

      timeout_ = 0;

      encoding_ = "";

      stagingSchema_ = "";

      optionCase_ = 0;
      option_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GpssOuterClass.internal_static_api_OpenRequest_descriptor;
    }

    @Override
    public OpenRequest getDefaultInstanceForType() {
      return OpenRequest.getDefaultInstance();
    }

    @Override
    public OpenRequest build() {
      OpenRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public OpenRequest buildPartial() {
      OpenRequest result = new OpenRequest(this);
      if (sessionBuilder_ == null) {
        result.session_ = session_;
      } else {
        result.session_ = sessionBuilder_.build();
      }
      result.schemaName_ = schemaName_;
      result.tableName_ = tableName_;
      result.preSQL_ = preSQL_;
      result.postSQL_ = postSQL_;
      result.timeout_ = timeout_;
      result.encoding_ = encoding_;
      result.stagingSchema_ = stagingSchema_;
      if (optionCase_ == 100) {
        if (insertOptionBuilder_ == null) {
          result.option_ = option_;
        } else {
          result.option_ = insertOptionBuilder_.build();
        }
      }
      if (optionCase_ == 101) {
        if (updateOptionBuilder_ == null) {
          result.option_ = option_;
        } else {
          result.option_ = updateOptionBuilder_.build();
        }
      }
      if (optionCase_ == 102) {
        if (mergeOptionBuilder_ == null) {
          result.option_ = option_;
        } else {
          result.option_ = mergeOptionBuilder_.build();
        }
      }
      result.optionCase_ = optionCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof OpenRequest) {
        return mergeFrom((OpenRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(OpenRequest other) {
      if (other == OpenRequest.getDefaultInstance()) return this;
      if (other.hasSession()) {
        mergeSession(other.getSession());
      }
      if (!other.getSchemaName().isEmpty()) {
        schemaName_ = other.schemaName_;
        onChanged();
      }
      if (!other.getTableName().isEmpty()) {
        tableName_ = other.tableName_;
        onChanged();
      }
      if (!other.getPreSQL().isEmpty()) {
        preSQL_ = other.preSQL_;
        onChanged();
      }
      if (!other.getPostSQL().isEmpty()) {
        postSQL_ = other.postSQL_;
        onChanged();
      }
      if (other.getTimeout() != 0) {
        setTimeout(other.getTimeout());
      }
      if (!other.getEncoding().isEmpty()) {
        encoding_ = other.encoding_;
        onChanged();
      }
      if (!other.getStagingSchema().isEmpty()) {
        stagingSchema_ = other.stagingSchema_;
        onChanged();
      }
      switch (other.getOptionCase()) {
        case INSERTOPTION: {
          mergeInsertOption(other.getInsertOption());
          break;
        }
        case UPDATEOPTION: {
          mergeUpdateOption(other.getUpdateOption());
          break;
        }
        case MERGEOPTION: {
          mergeMergeOption(other.getMergeOption());
          break;
        }
        case OPTION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      OpenRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (OpenRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int optionCase_ = 0;
    private Object option_;
    public OptionCase
        getOptionCase() {
      return OptionCase.forNumber(
          optionCase_);
    }

    public Builder clearOption() {
      optionCase_ = 0;
      option_ = null;
      onChanged();
      return this;
    }


    private Session session_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Session, Session.Builder, SessionOrBuilder> sessionBuilder_;
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     * @return Whether the session field is set.
     */
    public boolean hasSession() {
      return sessionBuilder_ != null || session_ != null;
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     * @return The session.
     */
    public Session getSession() {
      if (sessionBuilder_ == null) {
        return session_ == null ? Session.getDefaultInstance() : session_;
      } else {
        return sessionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    public Builder setSession(Session value) {
      if (sessionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        session_ = value;
        onChanged();
      } else {
        sessionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    public Builder setSession(
        Session.Builder builderForValue) {
      if (sessionBuilder_ == null) {
        session_ = builderForValue.build();
        onChanged();
      } else {
        sessionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    public Builder mergeSession(Session value) {
      if (sessionBuilder_ == null) {
        if (session_ != null) {
          session_ =
            Session.newBuilder(session_).mergeFrom(value).buildPartial();
        } else {
          session_ = value;
        }
        onChanged();
      } else {
        sessionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    public Builder clearSession() {
      if (sessionBuilder_ == null) {
        session_ = null;
        onChanged();
      } else {
        session_ = null;
        sessionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    public Session.Builder getSessionBuilder() {
      
      onChanged();
      return getSessionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    public SessionOrBuilder getSessionOrBuilder() {
      if (sessionBuilder_ != null) {
        return sessionBuilder_.getMessageOrBuilder();
      } else {
        return session_ == null ?
            Session.getDefaultInstance() : session_;
      }
    }
    /**
     * <pre>
     * Session ID returned by Connect
     * </pre>
     *
     * <code>.api.Session Session = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Session, Session.Builder, SessionOrBuilder>
        getSessionFieldBuilder() {
      if (sessionBuilder_ == null) {
        sessionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Session, Session.Builder, SessionOrBuilder>(
                getSession(),
                getParentForChildren(),
                isClean());
        session_ = null;
      }
      return sessionBuilder_;
    }

    private Object schemaName_ = "";
    /**
     * <pre>
     * Name of the Greenplum Database schema
     * </pre>
     *
     * <code>string SchemaName = 2;</code>
     * @return The schemaName.
     */
    public String getSchemaName() {
      Object ref = schemaName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        schemaName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Name of the Greenplum Database schema
     * </pre>
     *
     * <code>string SchemaName = 2;</code>
     * @return The bytes for schemaName.
     */
    public com.google.protobuf.ByteString
        getSchemaNameBytes() {
      Object ref = schemaName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        schemaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the Greenplum Database schema
     * </pre>
     *
     * <code>string SchemaName = 2;</code>
     * @param value The schemaName to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      schemaName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the Greenplum Database schema
     * </pre>
     *
     * <code>string SchemaName = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaName() {
      
      schemaName_ = getDefaultInstance().getSchemaName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the Greenplum Database schema
     * </pre>
     *
     * <code>string SchemaName = 2;</code>
     * @param value The bytes for schemaName to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      schemaName_ = value;
      onChanged();
      return this;
    }

    private Object tableName_ = "";
    /**
     * <pre>
     * Name of the Greenplum Database table
     * </pre>
     *
     * <code>string TableName = 3;</code>
     * @return The tableName.
     */
    public String getTableName() {
      Object ref = tableName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Name of the Greenplum Database table
     * </pre>
     *
     * <code>string TableName = 3;</code>
     * @return The bytes for tableName.
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the Greenplum Database table
     * </pre>
     *
     * <code>string TableName = 3;</code>
     * @param value The tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tableName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the Greenplum Database table
     * </pre>
     *
     * <code>string TableName = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTableName() {
      
      tableName_ = getDefaultInstance().getTableName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the Greenplum Database table
     * </pre>
     *
     * <code>string TableName = 3;</code>
     * @param value The bytes for tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tableName_ = value;
      onChanged();
      return this;
    }

    private Object preSQL_ = "";
    /**
     * <pre>
     * SQL to execute before gpss loads the data
     * </pre>
     *
     * <code>string PreSQL = 4;</code>
     * @return The preSQL.
     */
    public String getPreSQL() {
      Object ref = preSQL_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        preSQL_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * SQL to execute before gpss loads the data
     * </pre>
     *
     * <code>string PreSQL = 4;</code>
     * @return The bytes for preSQL.
     */
    public com.google.protobuf.ByteString
        getPreSQLBytes() {
      Object ref = preSQL_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        preSQL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * SQL to execute before gpss loads the data
     * </pre>
     *
     * <code>string PreSQL = 4;</code>
     * @param value The preSQL to set.
     * @return This builder for chaining.
     */
    public Builder setPreSQL(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      preSQL_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SQL to execute before gpss loads the data
     * </pre>
     *
     * <code>string PreSQL = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreSQL() {
      
      preSQL_ = getDefaultInstance().getPreSQL();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SQL to execute before gpss loads the data
     * </pre>
     *
     * <code>string PreSQL = 4;</code>
     * @param value The bytes for preSQL to set.
     * @return This builder for chaining.
     */
    public Builder setPreSQLBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      preSQL_ = value;
      onChanged();
      return this;
    }

    private Object postSQL_ = "";
    /**
     * <pre>
     * SQL to execute after gpss loads the data
     * </pre>
     *
     * <code>string PostSQL = 5;</code>
     * @return The postSQL.
     */
    public String getPostSQL() {
      Object ref = postSQL_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        postSQL_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * SQL to execute after gpss loads the data
     * </pre>
     *
     * <code>string PostSQL = 5;</code>
     * @return The bytes for postSQL.
     */
    public com.google.protobuf.ByteString
        getPostSQLBytes() {
      Object ref = postSQL_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        postSQL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * SQL to execute after gpss loads the data
     * </pre>
     *
     * <code>string PostSQL = 5;</code>
     * @param value The postSQL to set.
     * @return This builder for chaining.
     */
    public Builder setPostSQL(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      postSQL_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SQL to execute after gpss loads the data
     * </pre>
     *
     * <code>string PostSQL = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPostSQL() {
      
      postSQL_ = getDefaultInstance().getPostSQL();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SQL to execute after gpss loads the data
     * </pre>
     *
     * <code>string PostSQL = 5;</code>
     * @param value The bytes for postSQL to set.
     * @return This builder for chaining.
     */
    public Builder setPostSQLBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      postSQL_ = value;
      onChanged();
      return this;
    }

    private int timeout_ ;
    /**
     * <pre>
     * Time to wait before aborting the operation (seconds); not supported
     * </pre>
     *
     * <code>int32 Timeout = 6;</code>
     * @return The timeout.
     */
    public int getTimeout() {
      return timeout_;
    }
    /**
     * <pre>
     * Time to wait before aborting the operation (seconds); not supported
     * </pre>
     *
     * <code>int32 Timeout = 6;</code>
     * @param value The timeout to set.
     * @return This builder for chaining.
     */
    public Builder setTimeout(int value) {
      
      timeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time to wait before aborting the operation (seconds); not supported
     * </pre>
     *
     * <code>int32 Timeout = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeout() {
      
      timeout_ = 0;
      onChanged();
      return this;
    }

    private Object encoding_ = "";
    /**
     * <pre>
     * Encoding of text data; not supported
     * </pre>
     *
     * <code>string Encoding = 7;</code>
     * @return The encoding.
     */
    public String getEncoding() {
      Object ref = encoding_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        encoding_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Encoding of text data; not supported
     * </pre>
     *
     * <code>string Encoding = 7;</code>
     * @return The bytes for encoding.
     */
    public com.google.protobuf.ByteString
        getEncodingBytes() {
      Object ref = encoding_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        encoding_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Encoding of text data; not supported
     * </pre>
     *
     * <code>string Encoding = 7;</code>
     * @param value The encoding to set.
     * @return This builder for chaining.
     */
    public Builder setEncoding(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      encoding_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Encoding of text data; not supported
     * </pre>
     *
     * <code>string Encoding = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearEncoding() {
      
      encoding_ = getDefaultInstance().getEncoding();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Encoding of text data; not supported
     * </pre>
     *
     * <code>string Encoding = 7;</code>
     * @param value The bytes for encoding to set.
     * @return This builder for chaining.
     */
    public Builder setEncodingBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      encoding_ = value;
      onChanged();
      return this;
    }

    private Object stagingSchema_ = "";
    /**
     * <pre>
     * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
     * </pre>
     *
     * <code>string StagingSchema = 8;</code>
     * @return The stagingSchema.
     */
    public String getStagingSchema() {
      Object ref = stagingSchema_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stagingSchema_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
     * </pre>
     *
     * <code>string StagingSchema = 8;</code>
     * @return The bytes for stagingSchema.
     */
    public com.google.protobuf.ByteString
        getStagingSchemaBytes() {
      Object ref = stagingSchema_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stagingSchema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
     * </pre>
     *
     * <code>string StagingSchema = 8;</code>
     * @param value The stagingSchema to set.
     * @return This builder for chaining.
     */
    public Builder setStagingSchema(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      stagingSchema_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
     * </pre>
     *
     * <code>string StagingSchema = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearStagingSchema() {
      
      stagingSchema_ = getDefaultInstance().getStagingSchema();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema in which gpss creates external and temp tables; default is to create these tables in the same schema as the target table
     * </pre>
     *
     * <code>string StagingSchema = 8;</code>
     * @param value The bytes for stagingSchema to set.
     * @return This builder for chaining.
     */
    public Builder setStagingSchemaBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      stagingSchema_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        InsertOption, InsertOption.Builder, InsertOptionOrBuilder> insertOptionBuilder_;
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     * @return Whether the insertOption field is set.
     */
    public boolean hasInsertOption() {
      return optionCase_ == 100;
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     * @return The insertOption.
     */
    public InsertOption getInsertOption() {
      if (insertOptionBuilder_ == null) {
        if (optionCase_ == 100) {
          return (InsertOption) option_;
        }
        return InsertOption.getDefaultInstance();
      } else {
        if (optionCase_ == 100) {
          return insertOptionBuilder_.getMessage();
        }
        return InsertOption.getDefaultInstance();
      }
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    public Builder setInsertOption(InsertOption value) {
      if (insertOptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        option_ = value;
        onChanged();
      } else {
        insertOptionBuilder_.setMessage(value);
      }
      optionCase_ = 100;
      return this;
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    public Builder setInsertOption(
        InsertOption.Builder builderForValue) {
      if (insertOptionBuilder_ == null) {
        option_ = builderForValue.build();
        onChanged();
      } else {
        insertOptionBuilder_.setMessage(builderForValue.build());
      }
      optionCase_ = 100;
      return this;
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    public Builder mergeInsertOption(InsertOption value) {
      if (insertOptionBuilder_ == null) {
        if (optionCase_ == 100 &&
            option_ != InsertOption.getDefaultInstance()) {
          option_ = InsertOption.newBuilder((InsertOption) option_)
              .mergeFrom(value).buildPartial();
        } else {
          option_ = value;
        }
        onChanged();
      } else {
        if (optionCase_ == 100) {
          insertOptionBuilder_.mergeFrom(value);
        }
        insertOptionBuilder_.setMessage(value);
      }
      optionCase_ = 100;
      return this;
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    public Builder clearInsertOption() {
      if (insertOptionBuilder_ == null) {
        if (optionCase_ == 100) {
          optionCase_ = 0;
          option_ = null;
          onChanged();
        }
      } else {
        if (optionCase_ == 100) {
          optionCase_ = 0;
          option_ = null;
        }
        insertOptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    public InsertOption.Builder getInsertOptionBuilder() {
      return getInsertOptionFieldBuilder().getBuilder();
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    public InsertOptionOrBuilder getInsertOptionOrBuilder() {
      if ((optionCase_ == 100) && (insertOptionBuilder_ != null)) {
        return insertOptionBuilder_.getMessageOrBuilder();
      } else {
        if (optionCase_ == 100) {
          return (InsertOption) option_;
        }
        return InsertOption.getDefaultInstance();
      }
    }
    /**
     * <code>.api.InsertOption InsertOption = 100;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        InsertOption, InsertOption.Builder, InsertOptionOrBuilder>
        getInsertOptionFieldBuilder() {
      if (insertOptionBuilder_ == null) {
        if (!(optionCase_ == 100)) {
          option_ = InsertOption.getDefaultInstance();
        }
        insertOptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            InsertOption, InsertOption.Builder, InsertOptionOrBuilder>(
                (InsertOption) option_,
                getParentForChildren(),
                isClean());
        option_ = null;
      }
      optionCase_ = 100;
      onChanged();;
      return insertOptionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        UpdateOption, UpdateOption.Builder, UpdateOptionOrBuilder> updateOptionBuilder_;
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     * @return Whether the updateOption field is set.
     */
    public boolean hasUpdateOption() {
      return optionCase_ == 101;
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     * @return The updateOption.
     */
    public UpdateOption getUpdateOption() {
      if (updateOptionBuilder_ == null) {
        if (optionCase_ == 101) {
          return (UpdateOption) option_;
        }
        return UpdateOption.getDefaultInstance();
      } else {
        if (optionCase_ == 101) {
          return updateOptionBuilder_.getMessage();
        }
        return UpdateOption.getDefaultInstance();
      }
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    public Builder setUpdateOption(UpdateOption value) {
      if (updateOptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        option_ = value;
        onChanged();
      } else {
        updateOptionBuilder_.setMessage(value);
      }
      optionCase_ = 101;
      return this;
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    public Builder setUpdateOption(
        UpdateOption.Builder builderForValue) {
      if (updateOptionBuilder_ == null) {
        option_ = builderForValue.build();
        onChanged();
      } else {
        updateOptionBuilder_.setMessage(builderForValue.build());
      }
      optionCase_ = 101;
      return this;
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    public Builder mergeUpdateOption(UpdateOption value) {
      if (updateOptionBuilder_ == null) {
        if (optionCase_ == 101 &&
            option_ != UpdateOption.getDefaultInstance()) {
          option_ = UpdateOption.newBuilder((UpdateOption) option_)
              .mergeFrom(value).buildPartial();
        } else {
          option_ = value;
        }
        onChanged();
      } else {
        if (optionCase_ == 101) {
          updateOptionBuilder_.mergeFrom(value);
        }
        updateOptionBuilder_.setMessage(value);
      }
      optionCase_ = 101;
      return this;
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    public Builder clearUpdateOption() {
      if (updateOptionBuilder_ == null) {
        if (optionCase_ == 101) {
          optionCase_ = 0;
          option_ = null;
          onChanged();
        }
      } else {
        if (optionCase_ == 101) {
          optionCase_ = 0;
          option_ = null;
        }
        updateOptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    public UpdateOption.Builder getUpdateOptionBuilder() {
      return getUpdateOptionFieldBuilder().getBuilder();
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    public UpdateOptionOrBuilder getUpdateOptionOrBuilder() {
      if ((optionCase_ == 101) && (updateOptionBuilder_ != null)) {
        return updateOptionBuilder_.getMessageOrBuilder();
      } else {
        if (optionCase_ == 101) {
          return (UpdateOption) option_;
        }
        return UpdateOption.getDefaultInstance();
      }
    }
    /**
     * <code>.api.UpdateOption UpdateOption = 101;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        UpdateOption, UpdateOption.Builder, UpdateOptionOrBuilder>
        getUpdateOptionFieldBuilder() {
      if (updateOptionBuilder_ == null) {
        if (!(optionCase_ == 101)) {
          option_ = UpdateOption.getDefaultInstance();
        }
        updateOptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            UpdateOption, UpdateOption.Builder, UpdateOptionOrBuilder>(
                (UpdateOption) option_,
                getParentForChildren(),
                isClean());
        option_ = null;
      }
      optionCase_ = 101;
      onChanged();;
      return updateOptionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        MergeOption, MergeOption.Builder, MergeOptionOrBuilder> mergeOptionBuilder_;
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     * @return Whether the mergeOption field is set.
     */
    public boolean hasMergeOption() {
      return optionCase_ == 102;
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     * @return The mergeOption.
     */
    public MergeOption getMergeOption() {
      if (mergeOptionBuilder_ == null) {
        if (optionCase_ == 102) {
          return (MergeOption) option_;
        }
        return MergeOption.getDefaultInstance();
      } else {
        if (optionCase_ == 102) {
          return mergeOptionBuilder_.getMessage();
        }
        return MergeOption.getDefaultInstance();
      }
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    public Builder setMergeOption(MergeOption value) {
      if (mergeOptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        option_ = value;
        onChanged();
      } else {
        mergeOptionBuilder_.setMessage(value);
      }
      optionCase_ = 102;
      return this;
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    public Builder setMergeOption(
        MergeOption.Builder builderForValue) {
      if (mergeOptionBuilder_ == null) {
        option_ = builderForValue.build();
        onChanged();
      } else {
        mergeOptionBuilder_.setMessage(builderForValue.build());
      }
      optionCase_ = 102;
      return this;
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    public Builder mergeMergeOption(MergeOption value) {
      if (mergeOptionBuilder_ == null) {
        if (optionCase_ == 102 &&
            option_ != MergeOption.getDefaultInstance()) {
          option_ = MergeOption.newBuilder((MergeOption) option_)
              .mergeFrom(value).buildPartial();
        } else {
          option_ = value;
        }
        onChanged();
      } else {
        if (optionCase_ == 102) {
          mergeOptionBuilder_.mergeFrom(value);
        }
        mergeOptionBuilder_.setMessage(value);
      }
      optionCase_ = 102;
      return this;
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    public Builder clearMergeOption() {
      if (mergeOptionBuilder_ == null) {
        if (optionCase_ == 102) {
          optionCase_ = 0;
          option_ = null;
          onChanged();
        }
      } else {
        if (optionCase_ == 102) {
          optionCase_ = 0;
          option_ = null;
        }
        mergeOptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    public MergeOption.Builder getMergeOptionBuilder() {
      return getMergeOptionFieldBuilder().getBuilder();
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    public MergeOptionOrBuilder getMergeOptionOrBuilder() {
      if ((optionCase_ == 102) && (mergeOptionBuilder_ != null)) {
        return mergeOptionBuilder_.getMessageOrBuilder();
      } else {
        if (optionCase_ == 102) {
          return (MergeOption) option_;
        }
        return MergeOption.getDefaultInstance();
      }
    }
    /**
     * <code>.api.MergeOption MergeOption = 102;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        MergeOption, MergeOption.Builder, MergeOptionOrBuilder>
        getMergeOptionFieldBuilder() {
      if (mergeOptionBuilder_ == null) {
        if (!(optionCase_ == 102)) {
          option_ = MergeOption.getDefaultInstance();
        }
        mergeOptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            MergeOption, MergeOption.Builder, MergeOptionOrBuilder>(
                (MergeOption) option_,
                getParentForChildren(),
                isClean());
        option_ = null;
      }
      optionCase_ = 102;
      onChanged();;
      return mergeOptionBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.OpenRequest)
  }

  // @@protoc_insertion_point(class_scope:api.OpenRequest)
  private static final OpenRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new OpenRequest();
  }

  public static OpenRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OpenRequest>
      PARSER = new com.google.protobuf.AbstractParser<OpenRequest>() {
    @Override
    public OpenRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OpenRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OpenRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<OpenRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public OpenRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

